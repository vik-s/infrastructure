version: '3.9'

services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    security_opt: 
      - no-new-privileges:true
    environment:
      - NAMECHEAP_API_USER={{ secret_namecheap_api_user }}
      - NAMECHEAP_API_KEY={{ secret_namecheap_api_key }}
    ports:
      - 80:80
      - 443:443
    profiles:
      - all
      - network
    networks:
      - traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/traefik:/etc/traefik"
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`traefik.iyer.app`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.middlewares=localip@file
      - traefik.http.services.dashboard.loadbalancer.server.port=80"

  librespeed:
    image: lscr.io/linuxserver/librespeed:5.2.5
    container_name: librespeed 
    security_opt: 
      - no-new-privileges:true
    environment:
      - PUID={{ docker_userid }}
      - PGID={{ docker_userid }}
      - TZ={{ TZ }}
    volumes:
      - ./librespeed/config:/config
    profiles:
      - all
      - tools
    networks:
      - traefik
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.librespeed.rule=Host(`librespeed.iyer.app`)
      - traefik.http.routers.librespeed.middlewares=localip@file

  sabnzbd:
    image: ghcr.io/linuxserver/sabnzbd:3.7.2
    container_name: sabnzbd
    security_opt: 
      - no-new-privileges:true
    environment:
      - PUID={{ docker_userid }}
      - PGID={{ docker_userid }}
      - TZ={{ TZ }}
    volumes:
      - ./sabnzbd:/config
      - /mnt/storage/media/usenet:/media/usenet:rw
    profiles:
      - all
      - media
    networks:
      - traefik
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.iyer.app`)
      - traefik.http.routers.sabnzbd.middlewares=localip@file

  radarr:
    image: ghcr.io/linuxserver/radarr:4.3.2
    container_name: radarr
    security_opt: 
      - no-new-privileges:true
    environment:
      - PUID={{ docker_userid }}
      - PGID={{ docker_userid }}
      - TZ={{ TZ }}
    volumes:
      - ./radarr:/config
      - /mnt/storage/media:/media
    profiles:
      - all
      - media
    networks:
      - traefik
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`radarr.iyer.app`)
      - traefik.http.routers.radarr.middlewares=localip@file

  sonarr:
    image: ghcr.io/linuxserver/sonarr:3.0.10
    container_name: sonarr
    security_opt: 
      - no-new-privileges:true
    environment:
      - PUID={{ docker_userid }}
      - PGID={{ docker_userid }}
      - TZ={{ TZ }}
    volumes:
      - ./sonarr:/config
      - /mnt/storage/media:/media
    profiles:
      - all
      - media
    networks:
      - traefik
    restart: unless-stopped 
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=Host(`sonarr.iyer.app`)
      - traefik.http.routers.sonarr.middlewares=localip@file

  overseerr:
    image: sctx/overseerr:1.32.5
    container_name: overseerr
    security_opt: 
      - no-new-privileges:true
    environment:
      - LOG_LEVEL=info
      - TZ={{ TZ }}
    volumes:
      - ./overseerr:/app/config
    profiles:
      - all
      - media
    networks:
      - traefik
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.overseerr.rule=Host(`overseerr.iyer.app`)
      - traefik.http.routers.overseerr.middlewares=localip@file

  lidarr:
    image: lscr.io/linuxserver/lidarr:0.8.1
    container_name: lidarr
    security_opt: 
      - no-new-privileges:true
    environment:
      - PUID={{ docker_userid }}
      - PGID={{ docker_userid }}
      - TZ={{ TZ }}
    volumes:
      - ./lidarr:/config
      - /mnt/storage/media:/media
    profiles:
      - all
      - media
    networks:
      - traefik
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidarr.rule=Host(`lidarr.iyer.app`)
      - traefik.http.routers.lidarr.middlewares=localip@file

  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:1.2.0-develop
    container_name: prowlarr
    security_opt: 
      - no-new-privileges:true
    environment:
      - PUID={{ docker_userid }}
      - PGID={{ docker_userid }}
      - TZ={{ TZ }}
    volumes:
      - ./prowlarr:/config
    profiles:
      - all
      - media
    networks:
      - traefik
    restart: unless-stopped 
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.iyer.app`)
      - traefik.http.routers.prowlarr.middlewares=localip@file
  
  vaultwarden:
    image: vaultwarden/server:1.27.0-alpine
    container_name: vaultwarden
    security_opt: 
      - no-new-privileges:true
    volumes:
      - ./vw-data:/data
    profiles:
      - all
      - tools
    depends_on:
      - vaultwarden_db
    networks:
      - traefik
      - db
    restart: unless-stopped
    environment:
      - "DATABASE_URL={{ vw_sqlurl }}"
      - DISABLE_ADMIN_TOKEN=true
      - SMTP_HOST=smtp.fastmail.com
      - SMTP_FROM={{ smtp_from }}
      - SMTP_PORT=587
      - SMTP_USERNAME={{ smtp_user }}
      - SMTP_PASSWORD={{ smtp_vw_password }}
      - SIGNUPS_ALLOWED=false
      - INVITATIONS_ALLOWED=false
    labels:
      - traefik.enable=true
      - traefik.http.routers.bitwarden.rule=Host(`bitwarden.iyer.app`)
      - traefik.http.routers.bitwarden.middlewares=localip@file

  vaultwarden_db:
    image: mariadb:10.9
    container_name: vaultwarden_db
    security_opt: 
      - no-new-privileges:true
    restart: unless-stopped 
    volumes:
      - /mnt/tank/dbs/mariadb/vaultwarden:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD={{ vw_rootpass }}
      - MYSQL_PASSWORD={{ vw_dbpass }}
      - MYSQL_DATABASE={{ vw_dbname }}
      - MYSQL_USER={{ vw_dbuser }}
    profiles:
      - all
      - tools
      - db
    networks:
      - db
  
  nextcloud:                                                           
    image: lscr.io/linuxserver/nextcloud:version-24.0.6
    container_name: nextcloud                                          
    security_opt: 
      - no-new-privileges:true
    environment:                                                       
      - PUID={{ docker_userid }}                                                      
      - PGID={{ docker_userid }}                                       
      - TZ={{ TZ }}                                       
      - DOCKER_MODS=linuxserver/mods:universal-cron
    volumes:                                                           
      - ./nextcloud:/config                                            
      - /mnt/tank/cloud:/data                                          
    restart: unless-stopped                                            
    profiles:                                                          
      - all                                                            
      - tools                                                          
    depends_on:                                                        
      - nextcloud_db                                       
      - redis                                                          
    networks:                                                          
      - traefik                                                        
      - db                                                      
    labels:                                                            
      - traefik.enable=true
      - traefik.http.routers.nextcloud.rule=Host(`cloud.iyer.app`)         
      - traefik.http.services.nextcloud-service.loadbalancer.server.scheme=https
      - traefik.http.services.nextcloud-service.loadbalancer.server.port=443
      - traefik.http.services.nextcloud-service.loadbalancer.serverstransport=ignorecert@file
      - traefik.http.middlewares.nextcloud-hsts.headers.stsseconds=15552000
      - traefik.http.routers.nextcloud.middlewares=nextcloud-hsts@docker

  nextcloud_db:                                                          
    image: postgres:14.5-alpine                                        
    container_name: postgresql
    security_opt: 
      - no-new-privileges:true
    environment:                                                       
      - POSTGRES_USER={{ nc_dbuser }}
      - POSTGRES_PASSWORD={{ nc_dbpass }}
      - POSTGRES_DB={{ nc_dbname }}                              
    profiles:                                                          
      - all                                                            
      - db                                                             
    networks:                                                          
      - db                                                     
    volumes:                                                           
      - /mnt/tank/dbs/postgres/nextcloud14:/var/lib/postgresql/data      
    restart: unless-stopped  
  
  redis:                                                               
    image: redis:7.0.9-alpine                                           
    container_name: redis                                              
    security_opt: 
      - no-new-privileges:true
    volumes:                                                           
      - /mnt/storage/dbs/redis/nextcloud:/data                         
    restart: unless-stopped                                            
    networks:                                                          
      - db                                                      
    profiles:                                                          
      - all                                                            
      - db  

  photoview_db:
    image: mariadb:10.9
    container_name: photoview_db
    security_opt: 
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - MARIADB_ROOT_PASSWORD={{ pv_rootpass }}
      - MARIADB_USER={{ pv_dbuser }}
      - MARIADB_PASSWORD={{ pv_dbpass }}
      - MARIADB_DATABASE={{ pv_dbname }}
    networks:
      - db
    profiles:
      - all
      - db
    volumes:
      - /mnt/tank/dbs/mariadb/photoview:/var/lib/mysql

  photoview:
    image: viktorstrate/photoview:2.3.13
    container_name: photoview
    security_opt: 
      - no-new-privileges:true
    restart: unless-stopped
    depends_on:
      - photoview_db
    environment:
      - PHOTOVIEW_DATABASE_DRIVER=mysql
      - PHOTOVIEW_MYSQL_URL={{ pv_sqlurl }}
      - PHOTOVIEW_LISTEN_IP=photoview
      - PHOTOVIEW_LISTEN_PORT=80
      - PHOTOVIEW_MEDIA_CACHE=/app/cache
      - PHOTOVIEW_PUBLIC_ENDPOINT={{ pv_endpt }}
      - MAPBOX_TOKEN={{ pv_mapbox }}
    networks:
      - traefik
      - db
    profiles:
      - all
      - tools
    volumes:
      - /mnt/tank/cache/photoview:/app/cache
      - /mnt/tank/cloud/vik/files/InstantUpload:/photos-vik:ro
      - /mnt/tank/cloud/sam/files/InstantUpload:/photos-sam:ro
      - /mnt/tank/cloud/vik/files/Photos_by_Events:/photos-events:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.photoview.rule=Host(`photos.iyer.app`)
      - traefik.http.routers.photoview.middlewares=localip@file

  uptime-kuma:
    image: louislam/uptime-kuma:1.20.2-alpine
    container_name: uptime-kuma
    security_opt: 
      - no-new-privileges:true
    restart: unless-stopped
    volumes:
      - ./uptime-kuma:/app/data
    networks:
      - traefik
    profiles:
      - all
      - tools
    labels:
      - traefik.enable=true
      - traefik.http.routers.uptime-kuma.rule=Host(`status.iyer.app`)
      - traefik.http.routers.uptime-kuma.middlewares=localip@file

  docker-db-auto-backup:
    image: ghcr.io/realorangeone/db-auto-backup:latest
    container_name: db-auto-backup
    security_opt: 
      - no-new-privileges:true
    restart: unless-stopped
    security_opt: 
      - no-new-privileges:true
    networks:
      - db
    profiles:
      - all
      - db 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/tank/dbs/backups:/var/backups
    environment:
      - HEALTHCHECKS_ID={{ hcid_dockerdb }}
  
  openbooks:
    image: evanbuss/openbooks:latest
    container_name: OpenBooks
    security_opt: 
      - no-new-privileges:true
    restart: unless-stopped
    command: --persist --name gitbk123 --useragent HexChat 2.9.1 --tls true --searchbot searchook
    networks:
      - traefik
    profiles:
      - all
      - media
    volumes:
      - /mnt/tank/vik/temp-books:/books
    labels:
      - traefik.enable=true
      - traefik.http.routers.openbooks.rule=Host(`openbooks.iyer.app`)
      - traefik.http.routers.openbooks.middlewares=localip@file

  calibre:
    image: lscr.io/linuxserver/calibre:6.13.0
    container_name: calibre
    security_opt: 
      - no-new-privileges:true
    environment:
      - PUID={{ docker_userid }}
      - PGID={{ docker_userid }}
      - TZ={{ TZ }}
    volumes:
      - ./calibre:/config
      - /mnt/tank/calibre:/calibre
      - /mnt/storage/media/library/books:/books
      - /mnt/tank/vik/temp-books:/temp-books
    restart: unless-stopped
    networks:
      - traefik
    profiles:
      - all
      - media
    labels:
      - traefik.enable=true
      - traefik.http.routers.calibre.rule=Host(`calibre.iyer.app`)
      - traefik.http.services.calibre-service.loadbalancer.server.scheme=http
      - traefik.http.services.calibre-service.loadbalancer.server.port=8080
      - traefik.http.routers.calibre.middlewares=localip@file

  calibre-web:
    image: linuxserver/calibre-web:0.6.19
    container_name: calibre-web
    security_opt: 
      - no-new-privileges:true
    environment:
      - PUID={{ docker_userid }}
      - PGID={{ docker_userid }}
      - TZ={{ TZ }}
      - DOCKER_MODS=linuxserver/calibre-web:calibre
    volumes:
      - ./calibre-web:/config
      - /mnt/tank/calibre:/books
    restart: unless-stopped
    networks:
      - traefik
    profiles:
      - all
      - media
    labels:
      - traefik.enable=true
      - traefik.http.routers.calibre-web.rule=Host(`calibre-web.iyer.app`)
      - traefik.http.routers.calibre-web.middlewares=localip@file

  vikunja:
    image: vikunja/api:0.20.2
    container_name: vikunja_api
    volumes: 
      - ./vikunja/files:/app/vikunja/files
      - ./vikunja/config.yaml:/app/vikunja/config.yaml
    networks:
      - traefik
      - db
    profiles:
      - all
      - tools 
    depends_on:
      - vikunja_db
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.vikunja-api.rule=Host(`vikunja.iyer.app`) && PathPrefix(`/api/v1`, `/dav/`, `/.well-known/`)
  
  vikunja_frontend:
    image: vikunja/frontend:0.20.3
    container_name: vikunja_frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.vikunja-frontend.rule=Host(`vikunja.iyer.app`)
    networks:
      - traefik
      - db
    profiles:
      - all
      - tools 
    restart: unless-stopped
  
  vikunja_db:
    image: mariadb:10.9
    container_name: vikunja_db
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: vikunja 
      MYSQL_USER: vikunja
      MYSQL_PASSWORD: vikunja
      MYSQL_DATABASE: vikunja
    volumes:
      - /mnt/tank/dbs/mariadb/vikunja:/var/lib/mysql
    restart: unless-stopped
    command: --max-connections=1000
    profiles:
      - all
      - tools 
      - db
    networks:
      - db

  homer:
    image: b4bz/homer:v23.02.2
    container_name: homer
    security_opt: 
      - no-new-privileges:true
    volumes:
      - ./homer:/www/assets
    restart: unless-stopped
    networks:
      - traefik
    profiles:
      - all
      - tools 
    labels:
      - traefik.enable=true
      - traefik.http.routers.homer.rule=Host(`www.iyer.app`) || Host(`iyer.app`)
      - traefik.http.routers.homer.middlewares=localip@file

  kavita:  
    image: kizaing/kavita:latest
    container_name: kavita 
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik
    profiles:
      - all
      - media
    volumes:
      - /mnt/storage/media/library/comics:/comics
      - ./kavita:/kavita/config
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.kavita.rule=Host(`kavita.iyer.app`)
      - traefik.http.routers.kavita.middlewares=localip@file

  huggin_db:
    image: mariadb:10.9
    container_name: huggin_db
    security_opt:
      - no-new-privileges:true
    environment:
      MYSQL_ROOT_PASSWORD: {{ hg_rootpass }} 
      MYSQL_USER: {{ hg_dbuser }}
      MYSQL_PASSWORD: {{ hg_dbpass }}
      MYSQL_DATABASE: {{ hg_dbname }}
    networks:
      - db
    volumes:
      - /mnt/tank/dbs/mariadb/huggin:/var/lib/mysql
    restart: unless-stopped
    profiles:
      - all
      - db

  huggin:
    image: huginn/huginn:68b759a3f0874507d1871cf5c4700950579818d9
    container_name: huggin
    security_opt:
      - no-new-privileges:true
    environment:
      DATABASE_ADAPTER: mysql2
      DATABASE_HOST: huggin_db
      HUGINN_DATABASE_NAME: {{ hg_dbname }}
      HUGINN_DATABASE_USERNAME: {{ hg_dbuser }}
      HUGINN_DATABASE_PASSWORD: {{ hg_dbpass }}
      DOMAIN: "iyer.app"
      DO_NOT_SEED: 1
      DO_NOT_CREATE_DATABASE: 1
    depends_on:
      - huggin_db
    restart: unless-stopped
    profiles:
      - all
      - tools
    networks:
      - traefik
      - db
    labels:
      - traefik.enable=true
      - traefik.http.routers.huginn.rule=Host(`huginn.iyer.app`)
      - traefik.http.routers.huginn.middlewares=localip@file

  db_recipes:
    restart: unless-stopped
    image: postgres:11-alpine
    container_name: db_recipes
    security_opt:
      - no-new-privileges:true
    volumes:
      - /mnt/tank/dbs/postgres/tandoor:/var/lib/postgresql/data
    env_file:
      - ./tandoor/.env
    networks:
      - db
      - traefik
    profiles:
      - all
      - db

  web_recipes:
    restart: unless-stopped 
    image: vabene1111/recipes:1.4.7
    container_name: web_recipes
    security_opt:
      - no-new-privileges:true
    env_file:
      - ./tandoor/.env
    volumes:
      - tandoor_staticfiles:/opt/recipes/staticfiles
      - tandoor_nginx:/opt/recipes/nginx/conf.d
      - ./tandoor/mediafiles:/opt/recipes/mediafiles
    depends_on:
      - db_recipes
    networks:
      - db
      - traefik
    profiles:
      - all
      - tools`

  nginx_recipes:
    image: nginx:mainline-alpine
    container_name: nginx_recipes
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    env_file:
      - ./tandoor/.env
    volumes:
      - tandoor_nginx:/etc/nginx/conf.d
      - tandoor_staticfiles:/static
      - ./tandoor/mediafiles:/media
    depends_on:
      - web_recipes
    networks:
      - db
      - traefik
    profiles:
      - all
      - tools`
    labels: 
      - traefik.enable=true
      - traefik.http.routers.recipes.rule=Host(`recipes.iyer.app`)

  miniflux:
    image: miniflux/miniflux:2.0.42 
    container_name: miniflux
    depends_on:
      - miniflux_db
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - db
      - traefik
    profiles:
      - all
      - tools`
    environment:
      - DATABASE_URL=postgres://{{ mf_dbuser }}:{{ mf_dbpass }}@miniflux_db/miniflux?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME={{ secret_username }}
      - ADMIN_PASSWORD={{ secret_ansible_pass }}
      - BASE_URL=https://rss.iyer.app
    healthcheck:
      test: ["CMD", "/usr/bin/miniflux", "-healthcheck", "auto"]
    labels:
      - traefik.enable=true
      - traefik.http.routers.rss.rule=Host(`rss.iyer.app`)

  miniflux_db:
    image: postgres:15
    container_name: miniflux_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER={{ mf_dbuser }}
      - POSTGRES_PASSWORD={{ mf_dbpass }}
    volumes:
      - /mnt/tank/dbs/postgres/miniflux:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
      start_period: 30s
    profiles:
      - all
      - db
    networks:
      - db

  linkding:
    container_name: linkding
    image: sissbruecker/linkding:1.17.2
    volumes:    
      - ./linkding:/etc/linkding/data
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:  
      - traefik
    profiles:
      - all    
      - tools`
    labels:    
      - traefik.enable=true
      - traefik.http.routers.links.rule=Host(`links.iyer.app`)  

  firefly3:
    image: fireflyiii/core:version-5.7
    container_name: firefly3
    restart: unless-stopped
    depends_on:
      - firefly_db
    volumes: 
      - ./firefly3/upload:/var/www/html/storage/upload
    environment:
      TZ: {{ TZ }}
      DB_HOST: firefly_db
      DB_DATABASE: {{ ff_dbname }}
      DB_USERNAME: {{ ff_dbuser }}
      DB_PASSWORD: {{ ff_dbpass }}
      DB_CONNECTION: pgsql
      DB_PORT: 5432
      APP_KEY: {{ ff_appkey }}
      APP_URL: https://firefly.iyer.app
      TRUSTED_PROXIES: "**"
    security_opt:
      - no-new-privileges:true
    networks:  
      - traefik
      - db
    profiles:
      - all    
      - tools`
    labels:    
      - traefik.enable=true
      - traefik.http.routers.firefly.rule=Host(`firefly.iyer.app`)  
      - traefik.http.routers.firefly.middlewares=localip@file

  firefly_db:
    image: postgres:15
    container_name: firefly_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB={{ ff_dbname }}
      - POSTGRES_USER={{ ff_dbuser }}
      - POSTGRES_PASSWORD={{ ff_dbpass }}
    volumes:
      - /mnt/tank/dbs/postgres/firefly:/var/lib/postgresql/data
    profiles:
      - all
      - db
    networks:
      - db

  firefly_importer:
    image: fireflyiii/data-importer:version-0.9.17
    container_name: firefly_importer
    restart: unless-stopped
    volumes:
      - ./firefly3/configuration:/var/www/html/storage/configurations
    environment:
      TZ: {{ TZ }}
      FIREFLY_III_URL: https://firefly.iyer.app
      VANITY_URL: https://firefly.iyer.app
      FIREFLY_III_CLIENT_ID: 6
      TRUSTED_PROXIES: "**"
    depends_on:
      - firefly3
    networks:
      - traefik
      - db
    profiles:
      - all
      - tools
    labels:    
      - traefik.enable=true
      - traefik.http.routers.firefly-import.rule=Host(`firefly-import.iyer.app`)  
      - traefik.http.routers.firefly-import.middlewares=localip@file
  
  alpine:
    image: alpine:3.17
    container_name: alpine
    restart: unless-stopped
    networks:
      - traefik
      - db
    profiles:
      - all
      - tools
    command: sh -c "echo \"0 3 * * * wget -qO- https://firefly.iyer.app/api/v1/cron/{{ ff_clitoken }}\" | crontab - && crond -f -L /dev/stdout"

networks:
  traefik:
    external: true
  db:
    internal: true

volumes:
  tandoor_nginx:
  tandoor_staticfiles:
